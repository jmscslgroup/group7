<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!-- sets the default offset position of the traffic signal. -->
  <!-- this will be read in after the simulation starts -->
  <arg name="light_dist_default" default="500.0" />

  <!-- sets the default offset time of the traffic signal change. -->
  <!-- this will be read in after the simulation starts -->
  <arg name="light_time_default" default="40.0" />

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- Controller Launches. profproject control and CBF -->
  <node pkg="group7" type="group7" name="group7_node" output="screen">
		<remap from="/cmd_accel" to="/cmd_accel_pre"/>
		<remap from="/light_dist" to="/subtractor/light_dist" />
		<remap from="/light_change_time" to="/subtractor/light_change_time" />
	</node>
	
	
  <!-- publish as a value the one-shot distance to the next light -->
  <node pkg="rostopic" type="rostopic" name="node_light_dist" output="screen" args="pub /light_dist_default std_msgs/Float64 'data: $(arg light_dist_default)'" />

  <!-- publish as a value the one-shot time to the next light -->
  <node pkg="rostopic" type="rostopic" name="node_light_time" output="screen" args="pub /light_time_default std_msgs/Float64 'data: $(arg light_time_default)'" />

  <node pkg="clock2seconds" type="clock2seconds" name="clock2seconds_node">
  </node>

  <node pkg="oneshotadder" type="oneshotadder" name="oneshot_light_dist">
      <remap from="in1" to="/odom"/>
      <remap from="in2" to="/light_dist_default"/>
      <remap from="output" to="/oneshot/light_dist"/>
  </node>

  <node pkg="oneshotadder" type="oneshotadder" name="oneshot_light_time">
      <remap from="in1" to="/clock_secs"/>
      <remap from="in2" to="/light_time_default"/>
      <remap from="output" to="/oneshot/light_time"/>
  </node>

  <node pkg="subtractor" type="subtractor" name="subtractor_odom">
	<remap from="in1" to="/oneshot/light_dist" />
    	<remap from="in2" to="/odom" />
	<remap from="diff" to="/subtractor/light_dist" />
  </node>
	
  <node pkg="subtractor" type="subtractor" name="subtractor_clock">
	<remap from="in1" to="/oneshot/light_time" />
    	<remap from="in2" to="/clock_secs" />
	<remap from="diff" to="/subtractor/light_change_time" />
  </node>
  
  <node pkg="odometer" type="odometer" name="odometer_node">
    <remap from="vel_x" to="/car/state/vel_x"/>
  </node>
	
  <node pkg="modechanger" type="modechanger_node" name="modechanger_node">
  </node>
	
<!-- CBF params -->
  <arg name="description" default="group7undergrad_controller2"/>

	<arg name="margin" default="30.0"/>
	<arg name="use_margin" default="false"/>
	<arg name="hwil" default="true"/>
	<arg name="readonly" default="false"/>
	<arg name="vsl_hwil_test" default="false"/>
<!-- CBF node -->
  <node pkg="cbf" type="cbf" name="cbf" if="$(eval not readonly and hwil)">
	</node>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- CAN_to_ROS launches, for vehicle interface, subs, rosbag record and safety_checks(?) -->
<node pkg="can_to_ros" type="vehicle_interface" name="vehicle_interface" output="screen" respawn="true" respawn_delay="2" />
  <node pkg="can_to_ros" type ="subs" name="subs" output="screen" if="$(arg hwil)">
	</node>
  <include file="$(find can_to_ros)launch/safety_checks.launch" />
<!-- recording the ros bag -->
 <node pkg="can_to_ros" type ="rosbag_record.sh" name="bashscript2" output="screen" args="$(arg description) $(arg hwil)" />

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~ -->


</launch>